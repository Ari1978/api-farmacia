import folium
print(folium.__version__)
import streamlit as st
import requests
import folium
from streamlit_folium import folium_static

# URL de la API gratuita de OpenStreetMap (Nominatim)
NOMINATIM_URL = "https://nominatim.openstreetmap.org/search"

# Listas desplegables para Provincia y Partido con m√°s localidades en Buenos Aires
PROVINCIAS = ["Buenos Aires", "C√≥rdoba", "Santa Fe", "Mendoza", "Tucum√°n"]
PARTIDOS = {
    "Buenos Aires": ["La Plata", "Mar del Plata", "Quilmes", "Mor√≥n", "Avellaneda", "Berazategui", "Escobar", "San Isidro", "Tigre", "Vicente L√≥pez", "Lomas de Zamora", "Lan√∫s", "San Miguel", "Jos√© C. Paz", "San Fernando", "San Mart√≠n", "Hurlingham", "Malvinas Argentinas", "Ezeiza", "Merlo", "Moreno", "Ituzaing√≥"],
    "C√≥rdoba": ["C√≥rdoba Capital", "Villa Mar√≠a", "R√≠o Cuarto"],
    "Santa Fe": ["Rosario", "Santa Fe Capital", "Rafaela"],
    "Mendoza": ["Mendoza Capital", "San Rafael", "Godoy Cruz"],
    "Tucum√°n": ["San Miguel de Tucum√°n", "Yerba Buena", "Taf√≠ Viejo"]
}

def obtener_coordenadas(provincia, partido):
    params = {
        "q": f"{partido}, {provincia}, Argentina",
        "format": "json",
        "addressdetails": 1,
        "limit": 1
    }
    response = requests.get(NOMINATIM_URL, params=params, headers={"User-Agent": "FarmaciasApp"})
    if response.status_code == 200 and response.json():
        return response.json()[0]["lat"], response.json()[0]["lon"]
    return None, None

def obtener_farmacias(provincia, partido):
    lat, lon = obtener_coordenadas(provincia, partido)
    if not lat or not lon:
        return []
    params = {
        "q": "pharmacy",
        "format": "json",
        "lat": lat,
        "lon": lon,
        "addressdetails": 1,
        "extratags": 1,
        "limit": 10
    }
    response = requests.get(NOMINATIM_URL, params=params, headers={"User-Agent": "FarmaciasApp"})
    if response.status_code == 200:
        return response.json()
    return []

def obtener_farmacias_por_prompt(prompt):
    params = {
        "q": prompt,
        "format": "json",
        "addressdetails": 1,
        "extratags": 1,
        "limit": 10
    }
    response = requests.get(NOMINATIM_URL, params=params, headers={"User-Agent": "FarmaciasApp"})
    if response.status_code == 200:
        return response.json()
    return []

def mostrar_logo():
    st.image("https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Pharmacy_green_cross.svg/1200px-Pharmacy_green_cross.svg.png", width=100)

def mostrar_detalles_farmacia(farmacia):
    nombre = farmacia.get("display_name", "Desconocido")
    direccion = farmacia.get("address", {}).get("road", "Sin direcci√≥n")
    horas = farmacia.get("extratags", {}).get("opening_hours", "Sin horarios disponibles")
    link_google_maps = f"https://www.google.com/maps?q={farmacia['lat']},{farmacia['lon']}"
    
    st.markdown(f"### {nombre}")
    st.markdown(f"**Direcci√≥n:** {direccion}")
    st.markdown(f"**Horario de apertura:** {horas}")
    st.markdown(f"[Abrir en Google Maps]({link_google_maps})")

def main():
    st.set_page_config(page_title="Farmacias de Turno", page_icon="üíä", layout="wide")
    mostrar_logo()
    st.title("üîç Encuentra Farmacias de Turno Cercanas")
    
    # Opci√≥n de b√∫squeda por provincia y partido o por texto libre (prompt)
    search_type = st.radio("¬øC√≥mo te gustar√≠a buscar?", ["Por ubicaci√≥n", "Por b√∫squeda libre"])

    if search_type == "Por ubicaci√≥n":
        # Lista desplegable para seleccionar la provincia y el partido
        col1, col2 = st.columns(2)
        with col1:
            provincia = st.selectbox("üåé Selecciona una Provincia", PROVINCIAS)
        with col2:
            partido = st.selectbox("üèôÔ∏è Selecciona un Partido", PARTIDOS[provincia])
        
        if st.button("Buscar Farmacias", use_container_width=True):
            farmacias = obtener_farmacias(provincia, partido)
            
            if farmacias:
                lat, lon = obtener_coordenadas(provincia, partido)
                mapa = folium.Map(location=[float(lat), float(lon)], zoom_start=14, tiles='cartodbpositron')
                
                for farmacia in farmacias:
                    nombre = farmacia.get("display_name", "Desconocido")
                    lat_farmacia = farmacia["lat"]
                    lon_farmacia = farmacia["lon"]
                    folium.Marker(
                        [float(lat_farmacia), float(lon_farmacia)],
                        popup=f"<b>{nombre}</b>",
                        icon=folium.Icon(color="red", icon="plus")
                    ).add_to(mapa)
                
                st.subheader("üìç Mapa de Farmacias Cercanas")
                folium_static(mapa)
                
                st.subheader("üè• Lista de Farmacias")
                for farmacia in farmacias:
                    mostrar_detalles_farmacia(farmacia)
            else:
                st.error("‚ùå No se encontraron farmacias cercanas.")
    
    elif search_type == "Por b√∫squeda libre":
        # B√∫squeda por texto libre
        prompt = st.text_input("üîç Escribe tu b√∫squeda", "")
        if st.button("Buscar Farmacias por Prompt", use_container_width=True):
            if prompt:
                farmacias = obtener_farmacias_por_prompt(prompt)
                if farmacias:
                    st.subheader("üè• Lista de Farmacias Encontradas")
                    for farmacia in farmacias:
                        mostrar_detalles_farmacia(farmacia)
                else:
                    st.error("‚ùå No se encontraron farmacias con esa b√∫squeda.")
            else:
                st.error("‚ùå Ingresa una b√∫squeda para encontrar farmacias.")

if __name__ == "__main__":
    main()
